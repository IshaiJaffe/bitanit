// Generated by CoffeeScript 1.4.0
(function() {

  this.InventoryOrders = new Meteor.Collection('inventoryorders');
 

  Schemas.InventoryOrders = new SimpleSchema({
    id: {
      type: Number,
      decimal: false,
	  unique: true,
	  label:'מספר הזמנה',
	  autoValue: function() {
        if (!this.isInsert) 
		   return;
		return getAutoMac('InventoryOrders','id');
      }
    },
	supplier:{
	  type: String,
	  regEx: SimpleSchema.RegEx.Id,
	  label:'מחסן',
	  autoform: {
		options: function() {
		  return _.map(Suppliers.find().fetch(), function(supplier) {
			return {
			  label: supplier.name,
			  value: supplier._id
			};
		  });
		}
	  }
	},
	'content.$.item':{
		type: String,
		regEx: SimpleSchema.RegEx.Id,
		label:'פריט',
	  autoform: {
		options: function() {
		  return _.map(Items.find().fetch(), function(item) {
			return {
			  label: item.name,
			  value: item._id
			};
		  });
		}
	  }
	},
	'content.$.quantity':{
	   type:Number,
	   min:0,
	   decimal:false,
	   label:'כמות'
	},
	'content.$.supplied':{
	   type:Number,
	   min:0,
	   decimal:false,
	   label:'סופק',
	   autoValue:function(){
	       return 0;
	   }
	},
    orderDate: {
      type: Date,
	  label:'תאריך הזמנה',
      autoValue: function() {
        if (this.isInsert) {
          return new Date();
        }
      }
    },
    deadline: {
      type: Date,
      optional: true,
	  label:'תאריך מתוכנן',
      autoValue: function() {
        if (this.isInsert) {
          return new Date(Date.now() + 1000*60*60*24*30);
        }
      }
    },
	deliveryDate: {
      type: Date,
      optional: true,
	  label:'תאריך קבלה',      
    },    
    creator: {
      type: String,
	  label:'מזמין',
      regEx: SimpleSchema.RegEx.Id,
      autoValue: function() {
        if (this.isInsert) {
          return Meteor.userId();
        }
      },
      autoform: {
        options: function() {
          return _.map(Meteor.users.find().fetch(), function(user) {
            return {
              label: user.emails[0].username,
              value: user._id
            };
          });
        }
      }
    },
	closedBy: {
      type: String,
	  label:'נסגר ע"י',
      regEx: SimpleSchema.RegEx.Id,
	  optional: true,
      autoform: {
        options: function() {
          return _.map(Meteor.users.find().fetch(), function(user) {
            return {
              label: user.emails[0].username,
              value: user._id
            };
          });
        }
      }
    }
  });

  InventoryOrders.attachSchema(Schemas.InventoryOrders);

}).call(this);
